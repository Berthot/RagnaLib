// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RagnaLib.Infra.Data;

namespace RagnaLib.Infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210322161742_floatMigration")]
    partial class floatMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RagnaLib.Domain.Entities.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short>("Dark")
                        .HasColumnType("smallint");

                    b.Property<short>("Earth")
                        .HasColumnType("smallint");

                    b.Property<short>("Fire")
                        .HasColumnType("smallint");

                    b.Property<short>("Ghost")
                        .HasColumnType("smallint");

                    b.Property<short>("Holy")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Neutral")
                        .HasColumnType("smallint");

                    b.Property<short>("Poison")
                        .HasColumnType("smallint");

                    b.Property<short>("Tier")
                        .HasColumnType("smallint");

                    b.Property<short>("Undead")
                        .HasColumnType("smallint");

                    b.Property<short>("Water")
                        .HasColumnType("smallint");

                    b.Property<short>("Wind")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PK_ELEMENT");

                    b.ToTable("Element");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.EquipPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK_EQUIP_POSITION");

                    b.ToTable("EquipPosition");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Position = "Unknown"
                        },
                        new
                        {
                            Id = 1,
                            Position = "Accessory (Left)"
                        },
                        new
                        {
                            Id = 2,
                            Position = "Accessory (Right)"
                        },
                        new
                        {
                            Id = 3,
                            Position = "Armor"
                        },
                        new
                        {
                            Id = 4,
                            Position = "Body"
                        },
                        new
                        {
                            Id = 5,
                            Position = "Both hand"
                        },
                        new
                        {
                            Id = 6,
                            Position = "Costume Garment"
                        },
                        new
                        {
                            Id = 7,
                            Position = "Enchant"
                        },
                        new
                        {
                            Id = 8,
                            Position = "Essence"
                        },
                        new
                        {
                            Id = 9,
                            Position = "Garment"
                        },
                        new
                        {
                            Id = 10,
                            Position = "Headgear"
                        },
                        new
                        {
                            Id = 11,
                            Position = "Left Hand"
                        },
                        new
                        {
                            Id = 12,
                            Position = "Middle Headgear"
                        },
                        new
                        {
                            Id = 13,
                            Position = "Right Hand"
                        },
                        new
                        {
                            Id = 14,
                            Position = "Shadow Accessory (Left)"
                        },
                        new
                        {
                            Id = 15,
                            Position = "Shadow Accessory (Right)"
                        },
                        new
                        {
                            Id = 16,
                            Position = "Shadow Armor"
                        },
                        new
                        {
                            Id = 17,
                            Position = "Shadow Shield"
                        },
                        new
                        {
                            Id = 18,
                            Position = "Shadow Shoes"
                        },
                        new
                        {
                            Id = 19,
                            Position = "Shadow Weapon"
                        },
                        new
                        {
                            Id = 20,
                            Position = "Shield"
                        },
                        new
                        {
                            Id = 21,
                            Position = "Shoes"
                        },
                        new
                        {
                            Id = 22,
                            Position = "Upper Costume Headgear"
                        },
                        new
                        {
                            Id = 23,
                            Position = "Weapon"
                        });
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Attack")
                        .HasColumnType("integer");

                    b.Property<string>("CardImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("CardPrefix")
                        .HasColumnType("text");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("ItemLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("LimitLevel")
                        .HasColumnType("integer");

                    b.Property<int>("MagicAttack")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<bool>("Refinable")
                        .HasColumnType("boolean");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("integer");

                    b.Property<int>("Slots")
                        .HasColumnType("integer");

                    b.Property<string>("SmallImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("SubTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("UnidName")
                        .HasColumnType("text");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id")
                        .HasName("PK_ITEM");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("SubTypeId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.ItemEquipPositionMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EquipPositionId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK_ITEM_EQUIP_POSITION_MAP");

                    b.HasIndex("EquipPositionId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemEquipPositionMap");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK_ITEM_TYPE");

                    b.ToTable("ItemType");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Unknown"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Weapon"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Armor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Consumable"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ammo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Etc."
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cash"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Costume"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Shadow Equipment"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Card"
                        });
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("MapCleanUrl")
                        .HasColumnType("text");

                    b.Property<string>("MapUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK_LOCATION");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DbName")
                        .HasColumnType("text");

                    b.Property<int>("ElementId")
                        .HasColumnType("integer");

                    b.Property<string>("GifUrl")
                        .HasColumnType("text");

                    b.Property<bool>("HasDrop")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasLocation")
                        .HasColumnType("boolean");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK_MONSTER");

                    b.HasIndex("ElementId");

                    b.HasIndex("RaceId");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.MonsterItemMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DropRate")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("MonsterId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK_MONSTER_ITEM_MAP");

                    b.HasIndex("ItemId");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterItemMap");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.MonsterPerLocationMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<int>("MonsterId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id")
                        .HasName("PK_MONSTER_PER_LOCATION_MAP");

                    b.HasIndex("LocationId");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterPerLocationMap");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EnName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Race");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnName = "formless",
                            Name = "amorfo"
                        },
                        new
                        {
                            Id = 2,
                            EnName = "angel",
                            Name = "anjo"
                        },
                        new
                        {
                            Id = 3,
                            EnName = "brute",
                            Name = "bruto"
                        },
                        new
                        {
                            Id = 4,
                            EnName = "demon",
                            Name = "demônio"
                        },
                        new
                        {
                            Id = 5,
                            EnName = "dragon",
                            Name = "dragão"
                        },
                        new
                        {
                            Id = 6,
                            EnName = "human",
                            Name = "humanoide"
                        },
                        new
                        {
                            Id = 7,
                            EnName = "insect",
                            Name = "inseto"
                        },
                        new
                        {
                            Id = 8,
                            EnName = "undead",
                            Name = "morto-vivo"
                        },
                        new
                        {
                            Id = 9,
                            EnName = "fish",
                            Name = "peixe"
                        },
                        new
                        {
                            Id = 10,
                            EnName = "plant",
                            Name = "planta"
                        },
                        new
                        {
                            Id = 11,
                            EnName = "null",
                            Name = "doram"
                        },
                        new
                        {
                            Id = 12,
                            EnName = "null",
                            Name = "humano"
                        });
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.SubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK_SUB_TYPE");

                    b.ToTable("SubType");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Location = "-",
                            Name = "Unknown"
                        },
                        new
                        {
                            Id = 1,
                            Location = "Right Hand",
                            Name = "Dagger"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Right Hand",
                            Name = "Sword"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Both hand",
                            Name = "Two-handed Sword"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Right Hand",
                            Name = "Spear"
                        },
                        new
                        {
                            Id = 5,
                            Location = "Both hand",
                            Name = "Two-handed Spear"
                        },
                        new
                        {
                            Id = 6,
                            Location = "Right Hand",
                            Name = "Axe"
                        },
                        new
                        {
                            Id = 7,
                            Location = "Both hand",
                            Name = "Two-handed Axe"
                        },
                        new
                        {
                            Id = 8,
                            Location = "Right Hand",
                            Name = "Mace"
                        },
                        new
                        {
                            Id = 9,
                            Location = "Right Hand",
                            Name = "Rod"
                        },
                        new
                        {
                            Id = 10,
                            Location = "Both hand",
                            Name = "Two-handed Rod"
                        },
                        new
                        {
                            Id = 11,
                            Location = "Both hand",
                            Name = "Bow"
                        },
                        new
                        {
                            Id = 12,
                            Location = "Right Hand",
                            Name = "Fist weapon"
                        },
                        new
                        {
                            Id = 13,
                            Location = "Right Hand",
                            Name = "Instrument"
                        },
                        new
                        {
                            Id = 14,
                            Location = "Right Hand",
                            Name = "Whip"
                        },
                        new
                        {
                            Id = 15,
                            Location = "Right Hand",
                            Name = "Book"
                        },
                        new
                        {
                            Id = 16,
                            Location = "Both hand",
                            Name = "Katar"
                        },
                        new
                        {
                            Id = 17,
                            Location = "Both hand",
                            Name = "Gatling Gun"
                        },
                        new
                        {
                            Id = 18,
                            Location = "Both hand",
                            Name = "Shotgun"
                        },
                        new
                        {
                            Id = 19,
                            Location = "Both hand",
                            Name = "Grenade Launcher"
                        },
                        new
                        {
                            Id = 20,
                            Location = "Both hand",
                            Name = "Shuriken"
                        },
                        new
                        {
                            Id = 21,
                            Location = "Accessory",
                            Name = "Accessory"
                        },
                        new
                        {
                            Id = 22,
                            Location = "Accessory",
                            Name = "Accessory (Right)"
                        },
                        new
                        {
                            Id = 23,
                            Location = "Accessory",
                            Name = "Accessory (Left)"
                        },
                        new
                        {
                            Id = 24,
                            Location = "Middle Headgear",
                            Name = "Helm"
                        },
                        new
                        {
                            Id = 25,
                            Location = "Body",
                            Name = "Armor"
                        },
                        new
                        {
                            Id = 26,
                            Location = "Garment",
                            Name = "Garment"
                        },
                        new
                        {
                            Id = 27,
                            Location = "Shoes",
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 28,
                            Location = "-",
                            Name = "Pet"
                        },
                        new
                        {
                            Id = 29,
                            Location = "-",
                            Name = "Special"
                        },
                        new
                        {
                            Id = 30,
                            Location = "-",
                            Name = "Regeneration"
                        },
                        new
                        {
                            Id = 31,
                            Location = "-",
                            Name = "Taming item"
                        },
                        new
                        {
                            Id = 32,
                            Location = "-",
                            Name = "Arrow"
                        },
                        new
                        {
                            Id = 33,
                            Location = "-",
                            Name = "Cannonball"
                        },
                        new
                        {
                            Id = 34,
                            Location = "-",
                            Name = "Throw Weapon"
                        },
                        new
                        {
                            Id = 35,
                            Location = "-",
                            Name = "Ammo"
                        },
                        new
                        {
                            Id = 36,
                            Location = "-",
                            Name = "-"
                        },
                        new
                        {
                            Id = 37,
                            Location = "-",
                            Name = "Pistol"
                        },
                        new
                        {
                            Id = 38,
                            Location = "-",
                            Name = "Rifle"
                        },
                        new
                        {
                            Id = 39,
                            Location = "Left Hand",
                            Name = "Shield"
                        },
                        new
                        {
                            Id = 40,
                            Location = "Costume Garment",
                            Name = "Costume Garment"
                        },
                        new
                        {
                            Id = 41,
                            Location = "Shadow Weapon",
                            Name = "Shadow Weapon"
                        },
                        new
                        {
                            Id = 42,
                            Location = "Shadow Armor",
                            Name = "Shadow Armor"
                        },
                        new
                        {
                            Id = 43,
                            Location = "Shadow Shield",
                            Name = "Shadow Shield"
                        },
                        new
                        {
                            Id = 44,
                            Location = "Shadow Shoes",
                            Name = "Shadow Shoes"
                        },
                        new
                        {
                            Id = 45,
                            Location = "Right Shadow Accessory",
                            Name = "Shadow Acc. (Right)"
                        },
                        new
                        {
                            Id = 46,
                            Location = "Left Shadow Accessory",
                            Name = "Shadow Acc. (Left)"
                        },
                        new
                        {
                            Id = 47,
                            Location = "Upper Costume Headgear",
                            Name = "Costume Helm"
                        });
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Item", b =>
                {
                    b.HasOne("RagnaLib.Domain.Entities.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeId")
                        .HasConstraintName("FK_ITEM_ITEMTYPE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RagnaLib.Domain.Entities.SubType", "SubType")
                        .WithMany("Items")
                        .HasForeignKey("SubTypeId")
                        .HasConstraintName("FK_ITEM_SUBTYPE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemType");

                    b.Navigation("SubType");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.ItemEquipPositionMap", b =>
                {
                    b.HasOne("RagnaLib.Domain.Entities.EquipPosition", "EquipPosition")
                        .WithMany("ItemEquipPositionMaps")
                        .HasForeignKey("EquipPositionId")
                        .HasConstraintName("FK_ITEMEQUIPPOSITIONMAP_EQUIPEPOSITION")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RagnaLib.Domain.Entities.Item", "Item")
                        .WithMany("ItemEquipPositionMaps")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_ITEMEQUIPPOSITIONMAP_ITEM")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EquipPosition");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Monster", b =>
                {
                    b.HasOne("RagnaLib.Domain.Entities.Element", "Element")
                        .WithMany("Monsters")
                        .HasForeignKey("ElementId")
                        .HasConstraintName("FK_MONSTER_ELEMENT")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RagnaLib.Domain.Entities.Race", "Race")
                        .WithMany("Monsters")
                        .HasForeignKey("RaceId")
                        .HasConstraintName("FK_MONSTER_RACE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Element");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.MonsterItemMap", b =>
                {
                    b.HasOne("RagnaLib.Domain.Entities.Item", "Item")
                        .WithMany("MonsterItemMaps")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_MOSTERITEMMAP_ITEM")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RagnaLib.Domain.Entities.Monster", "Monster")
                        .WithMany("MonsterItemMaps")
                        .HasForeignKey("MonsterId")
                        .HasConstraintName("FK_MOSTERITEMMAP_MONSTER")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.MonsterPerLocationMap", b =>
                {
                    b.HasOne("RagnaLib.Domain.Entities.Location", "Location")
                        .WithMany("MonsterPerLocationMaps")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_MONSTERPERLOCATION_LOCATION")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RagnaLib.Domain.Entities.Monster", "Monster")
                        .WithMany("MonsterPerLocationMaps")
                        .HasForeignKey("MonsterId")
                        .HasConstraintName("FK_MONSTERPERLOCATION_MONSTER")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Element", b =>
                {
                    b.Navigation("Monsters");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.EquipPosition", b =>
                {
                    b.Navigation("ItemEquipPositionMaps");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Item", b =>
                {
                    b.Navigation("ItemEquipPositionMaps");

                    b.Navigation("MonsterItemMaps");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Location", b =>
                {
                    b.Navigation("MonsterPerLocationMaps");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Monster", b =>
                {
                    b.Navigation("MonsterItemMaps");

                    b.Navigation("MonsterPerLocationMaps");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.Race", b =>
                {
                    b.Navigation("Monsters");
                });

            modelBuilder.Entity("RagnaLib.Domain.Entities.SubType", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
